// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum orderStatus {
  pending
  processing
  shipped
  delivered
  canceled
}

enum orderMethod {
  cash
  credit
}

model CartItem {
  cartItemId String  @id @default(uuid())
  cart       Cart    @relation(fields: [cartId], references: [cartId])
  cartId     String
  product    Product @relation(fields: [productId], references: [productId])
  productId  String
  quantity   Int
  Order      Order?  @relation(fields: [orderId], references: [orderId])
  orderId    String?
}

model Cart {
  cartId String     @id @default(uuid())
  items  CartItem[]
  user   User?
}

model User {
  userId    String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  address   String
  phone     String
  age       Int?
  createdAt DateTime @default(now())
  cart      Cart     @relation(fields: [cartId], references: [cartId])
  cartId    String   @unique
}

model Product {
  productId   String     @id @default(uuid())
  name        String
  description String?
  price       Float
  stock       Int
  createdAt   DateTime   @default(now())
  CartItem    CartItem[]
}

model Order {
  orderId         String      @id @default(uuid())
  orderDate       DateTime    @default(now())
  status          orderStatus
  totalAmount     Float
  shippingAddress String
  billingAddress  String?
  paymentMethod   String
  createdAt       DateTime    @default(now())
  items           CartItem[]
}
